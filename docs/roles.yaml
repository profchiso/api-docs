paths:
  /roles:
    tags:
      - Roles
    get:
      security:
        - formeloAuth: []

      description: 'Get all Roles'
      summary: 'Get all roles'
      produces:
        - application/json
      responses:
        200:
          description: 'Request was successful and response recieved'
          schema:
            type: array
            properties:
              $ref: '#/components/schemas/Role'
        401:
          description: 'Authorization token not sent along with request or token not valid'
        500:
          description: 'Server entcounter an error while processing the reauest'
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf: [$ref: '#/components/schemas/Role']

    post:
      tags:
        - Roles
      security:
        - formeloAuth: []

      description: 'Create new Role'
      summary: 'Create new role'
      produces:
        - application/json
      parameters:
        - in: body
          name: Add new Role
          description: Add new  Role
          required: true
          schema:
            $ref: 'definitions.yaml#/definitions/Role'

      responses:
        201:
          description: 'Role created successfully'
        400:
          description: 'Request contains invalid data in the request body'
        401:
          description: 'Authorization token not sent along with request or token not valid'

        500:
          description: 'Server entcounter an error while processing the reauest'

  /roles/{id}:
    get:
      tags:
        - Roles
      security:
        - formeloAuth: []

      description: 'Get a single Role'
      summary: 'Get a single role'
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: 'The ID of the role to get(should have a .json extension)'
          schema:
            type: string
            example: 'ly93vp6r.json'

      responses:
        200:
          description: 'Request was successful and response recieved'
          schema:
            type: object
            properties:
              $ref: '#/components/schemas/Role'

        400:
          description: 'Request contains invalid data in the request body'
        401:
          description: 'Authorization token not sent along with request or token not valid'
        404:
          description: 'No document found with the specified ID'
        500:
          description: 'Server entcounter an error while processing the reauest'

    put:
      tags:
        - Roles
      security:
        - formeloAuth: []

      description: 'Updates a Role'
      summary: 'update a role'
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: 'The ID of the role to be updated'
          schema:
            type: string
            example: 'ly93vp6r'
        - in: body
          name: update

      responses:
        200:
          description: 'Request was successful and response recieved'
        400:
          description: 'Request contains invalid data in the request body'
        401:
          description: 'Authorization token not sent along with request or token not valid'
        403:
          description: 'User not authorized to access the requested resource'
        404:
          description: 'No role found with the specified ID'
        500:
          description: 'Server entcounter an error while processing the reauest'

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'

    delete:
      tags:
        - Roles
      security:
        - formeloAuth: []

      description: 'Deletes the document with the specified ID from a given colection'
      summary: 'Delete a role'
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID of the document to be deleted'
          schema:
            type: string
            example: 'q1r0ywly.json'

      responses:
        400:
          description: 'User sent inavlid data'
        401:
          description: 'Authorization token not sent along with request or token not valid'
        403:
          description: 'User not authorized to access the requested resource'
        404:
          description: 'No document found with the specified ID'
        500:
          description: 'Server entcounter an error while processing the reauest'
